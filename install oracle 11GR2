#!/bin/bash
# 2019-05-15 version 1 
# 2019-05-20 version 1.2 
#       add: db basic optimize function
# 2019-06-05 version 1.3 
#       add: yum clean all 
#            /etc/yum.repo.d/bak command change
#            input val of media_dir change
#            change memlock to totalmem's 50%
export LANG=en_US.UTF-8
unset MAILCHECK
IP=$1
#MEDIA_DIR=$2
MEDIA_DIR=${2%*/}
ORA_BASE=${MEDIA_DIR}/app/oracle
ORA_HOME=${ORA_BASE}/product/11.2.0/dbhome_1
ORA_INV=${MEDIA_DIR}/app/oraInventory

ORA_USER=oracle
ORA_USERPWD=oracle
SYSPWD=oracle
ORA_DATA_DIR=${MEDIA_DIR}/app/oracle/oradata

cd $MEDIA_DIR

totalMem=`free -m | grep Mem: |sed 's/^Mem:\s*//'| awk '{print $1}'`
memLock=`echo "$totalMem*0.5*1024" |bc|awk '{printf "%.f", $0}'`

function alert() {
	echo -e "$1"
	exit -1
}


function os_config() {
    if [ "$HOSTNAME"  != "localhost.localdomain" ]; then
    	echo "$IP $HOSTNAME" >>/etc/hosts
    fi
    #19c
    #needed="unzip bc binutils compat-libcap1 compat-libstdc++ elfutils-libelf elfutils-libelf-devel fontconfig-devel glibc glibc-devel ksh libaio libaio-devel libX11 libXau libXi libXtst libXrender libXrender-devel libgcc librdmacm-devel libstdc++ libstdc++-devel libxcb make net-tools smartmontools sysstat"
    #11g AND 19c
    needed="bc binutils compat-libcap1 compat-libstdc++ compat-libstdc++-33 elfutils-libelf elfutils-libelf-devel fontconfig-devel gcc gcc-c++ glibc glibc-common glibc-devel glibc-headers ksh libaio libaio-devel libgcc librdmacm-devel libstdc++ libstdc++-devel libX11 libXau libxcb libXi libXrender libXrender-devel libXtst make net-tools smartmontools sysstat unzip"
	missing=$(rpm -q $needed| grep "not installed")

	if [ ! -z "$missing" ]; then
		#mount /dev/cdrom /mnt
	
		test $? != 0 && alert "***********************Error: mounting the os media***********************"
		    
		#test -d /etc/yum.repos.d/bak && mv -f /etc/yum.repos.d/*.repo /etc/yum.repos.d/bak || mkdir /etc/yum.repos.d/bak
		test -d /etc/yum.repos.d/bak && mv -f /etc/yum.repos.d/*.repo /etc/yum.repos.d/bak || mkdir /etc/yum.repos.d/bak && mv -f /etc/yum.repos.d/*.repo /etc/yum.repos.d/bak
	    cat >/etc/yum.repos.d/dvd.repo<<EOF
[dvd]
name=dvd
baseurl=file:///mnt/
gpgcheck=0
EOF
		yum clean all
		yum install $needed -y
		umount /mnt
	fi

	groupadd oinstall 
	groupadd dba 
	useradd -g oinstall -G dba $ORA_USER
	chown  $ORA_USER:oinstall $MEDIA_DIR
	echo $ORA_USERPWD |passwd $ORA_USER --stdin
	sed -i '10,$d' /home/$ORA_USER/.bash_profile
	cat >>/home/$ORA_USER/.bash_profile<<EOF
export ORACLE_BASE=$ORA_BASE
export ORACLE_HOME=$ORA_HOME
export ORACLE_SID=$SID

export PATH=\$ORACLE_HOME/bin:\$PATH
EOF

        cp /etc/sysctl.d/99-sysctl.conf $MEDIA_DIR/
	cat >>/etc/sysctl.d/99-sysctl.conf <<EOF
fs.aio-max-nr = 1048576
fs.file-max = 6815744
kernel.shmall = 2097152
kernel.shmmax = 68719476736
kernel.shmmni = 4096
kernel.sem = 250 32000 100 128
net.ipv4.ip_local_port_range = 9000 65500
net.core.rmem_default = 262144
net.core.rmem_max = 4194304
net.core.wmem_default = 262144
net.core.wmem_max = 1048576
EOF
	/sbin/sysctl -p
        
        cp   /etc/security/limits.conf $MEDIA_DIR/
	cat >> /etc/security/limits.conf <<EOF
$ORA_USER soft nproc 2047
$ORA_USER hard nproc 16384
$ORA_USER soft nofile 1024
$ORA_USER hard nofile 65536
$ORA_USER soft stack 10240
$ORA_USER soft stack 32768
$ORA_USER soft memlock $memLock
$ORA_USER hard memlock $memLock
EOF

	systemver=`cat /etc/redhat-release|sed -r 's/.* ([0-9]+)\..*/\1/'`
	if [[ $systemver = "6" ]];then
		echo "Stop linux 6 firewall"
		service iptables stop
  	chkconfig iptables off
	else 
		echo "Stop linux 7 firewall"
		systemctl stop firewalld
		systemctl disable firewalld
		systemctl disable avahi-daemon
	fi
	sed -i 's/^SELINUX=enforcing/SELINUX=disabled/' /etc/selinux/config
	setenforce 0
 	
 	
 	MaxMemlock=`su - $ORA_USER -c "ulimit -a"| grep 'max locked memory'| awk '{print $NF}'`
	test "$MaxMemlock" != "$memLock" && alert "***********************ERROR:User $ORA_USER created or configed with error***********************"
}


function rdbms_install() {
	# /u01/app/oraInventory # owned by grid:oinstall
	# /u01/app/oracle # owned by oracle:oinstall
	# /u01/app/oracle/product/19.0.0/dbhome_1/#  owned by oracle:oinistall
	# /u01/app/grid  #  Grid base owned by grid:oinstall
	# /u01/app/19.0.0/grid   # Grid home owned by root
	mkdir -p $ORA_HOME
	mkdir $ORA_INV
	chown -R ${ORA_USER}:oinstall $ORA_BASE $ORA_INV
	chmod 755 $ORA_BASE
	chmod 770 $ORA_INV

	cat > db_install.rsp <<EOF
oracle.install.responseFileVersion=/oracle/install/rspfmt_dbinstall_response_schema_v11_2_0
oracle.install.option=INSTALL_DB_SWONLY
ORACLE_HOSTNAME=$HOSTNAME
UNIX_GROUP_NAME=oinstall
INVENTORY_LOCATION=$ORA_INV
SELECTED_LANGUAGES=en
ORACLE_HOME=$ORA_HOME
ORACLE_BASE=$ORA_BASE
oracle.install.db.InstallEdition=EE
oracle.install.db.EEOptionsSelection=false
oracle.install.db.optionalComponents=oracle.rdbms.partitioning:11.2.0.4.0,oracle.oraolap:11.2.0.4.0,oracle.rdbms.dm:11.2.0.4.0,oracle.rdbms.dv:11.2.0.4.0,oracle.rdbms.lbac:11.2.0.4.0,oracle.rdbms.rat:11.2.0.4.0
oracle.install.db.DBA_GROUP=dba
oracle.install.db.OPER_GROUP=dba
DECLINE_SECURITY_UPDATES=true
oracle.installer.autoupdates.option=SKIP_UPDATES
EOF
	chown $ORA_USER db_install.rsp
	chmod 600 db_install.rsp
            
        chown $ORA_USER ${MEDIA_DIR}/*.zip
	#su - $ORA_USER -c "cd $MEDIA_DIR;./database/runInstaller -silent -ignorePrereq -responseFile $MEDIA_DIR/db_install.rsp"
	su - $ORA_USER -c "cd $MEDIA_DIR;unzip -q -o ${MEDIA_DIR}//\*.zip;./database/runInstaller -waitforcompletion -silent -ignorePrereq -responseFile $MEDIA_DIR/db_install.rsp"
	#su - $ORA_USER -c "cd $ORA_HOME;./runInstaller -silent -ignorePrereq -responseFile ${MEDIA_DIR}/db_install.rsp"
	#rm -f db_install.rsp

	su - $ORA_USER -c "sqlplus -v"
    test $? != 0 && cp $MEDIA_DIR/99-sysctl.conf /etc/sysctl.d/ && cp $MEDIA_DIR/limits.conf /etc/security/ && alert "***********************ERROR:RDBMS soft install failed***********************" 
#   test $? != 0 && alert "***********************ERROR:RDBMS soft install failed***********************" && cp $MEDIA_DIR/99-sysctl.conf /etc/sysctl.d/ && cp $MEDIA_DIR/limits.conf /etc/security/ 
}


function main() {
	DEBUG_FLG='McDeBuG'
	my_debug_flg=`echo $*| awk '{print $NF}'`
    if [[ "$my_debug_flg" = "$DEBUG_FLG" ]]; then
        export PS4='+{$LINENO:${FUNCNAME[0]}} '
        set -x
        echo args=$@
    fi
    echo "-----------------------INFO:OS config begin-----------------------";date
    os_config
    echo "-----------------------INFO:RDBMS install begin-----------------------";date
    rdbms_install
    echo "-----------------------INFO:ROOT scripts begin-----------------------";date
    $ORA_INV/orainstRoot.sh
    $ORA_HOME/root.sh
    echo "-----------------------INFO:dbca begin-----------------------";date
    echo "-----------------------INFO:dbca end-----------------------";date
    echo "-----------------------INFO:db basic optimize begin-----------------------";date
    echo "-----------------------INFO:db basic optimize end-----------------------";date
}
main $@ 2>&1


